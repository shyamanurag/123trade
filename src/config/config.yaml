# Main application configuration
app:
  name: "Trading System"
  version: "1.0.0"
  environment: "production"
  debug: false
  host: "0.0.0.0"
  port: 8000
  workers: 4
  timeout: 60
  cors:
    origins: ["*"]
    methods: ["*"]
    headers: ["*"]

# Database configuration
database:
  url: "postgresql://user:password@localhost:5432/trading"
  pool_size: 20
  max_overflow: 10
  echo: false
  pool_timeout: 30
  pool_recycle: 1800

# Redis configuration
redis:
  url: "redis://localhost:6379/0"
  pool_size: 10
  socket_timeout: 5
  socket_connect_timeout: 5
  retry_on_timeout: true

# Logging configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/trading.log"
  max_size: 10485760  # 10MB
  backup_count: 5

# Trading system configuration
trading:
  broker:
    name: "alpaca"
    api_key: "${ALPACA_API_KEY}"
    api_secret: "${ALPACA_API_SECRET}"
    base_url: "https://paper-api.alpaca.markets"
    data_url: "https://data.alpaca.markets"
    timeout: 30
    retry_attempts: 3

  strategies:
    enabled:
      - "momentum"
      - "mean_reversion"
      - "trend_following"
    default_timeframe: "1h"
    max_positions: 10
    position_size: 0.1  # 10% of portfolio per position

  risk:
    max_drawdown: 0.1  # 10% maximum drawdown
    stop_loss: 0.02    # 2% stop loss per position
    take_profit: 0.04  # 4% take profit per position
    max_leverage: 2.0
    risk_free_rate: 0.02

  execution:
    order_type: "market"
    time_in_force: "day"
    retry_attempts: 3
    retry_delay: 1
    slippage_tolerance: 0.001

# Security configuration
security:
  auth:
    secret_key: "${AUTH_SECRET_KEY}"
    algorithm: "HS256"
    access_token_expire_minutes: 30
    refresh_token_expire_days: 7
    password_min_length: 8
    password_hash_rounds: 12

  encryption:
    key: "${ENCRYPTION_KEY}"
    algorithm: "AES-256-GCM"
    salt_length: 16
    iterations: 100000

  rate_limiting:
    enabled: true
    requests_per_minute: 60
    burst_size: 10
    window_size: 60

# Monitoring configuration
monitoring:
  prometheus:
    enabled: true
    port: 9090
    path: "/metrics"
    scrape_interval: 15

  grafana:
    enabled: true
    port: 3000
    admin_user: "admin"
    admin_password: "${GRAFANA_PASSWORD}"

  alerts:
    enabled: true
    slack_webhook: "${SLACK_WEBHOOK_URL}"
    email:
      smtp_server: "smtp.gmail.com"
      smtp_port: 587
      username: "${EMAIL_USERNAME}"
      password: "${EMAIL_PASSWORD}"
      from_address: "alerts@trading-system.com"

# Service endpoints
endpoints:
  main_api: "http://localhost:8000"
  security_api: "http://localhost:8001"
  dash_app: "http://localhost:8050"
  prometheus: "http://localhost:9090"
  grafana: "http://localhost:3000"

# Feature flags
features:
  enable_websockets: true
  enable_backtesting: true
  enable_optimization: true
  enable_machine_learning: false
  enable_social_trading: false 