name: algoauto
region: blr

# Database Services - Reference existing databases
databases:
  # Redis for caching and real-time data
  - name: redis-cache
    engine: REDIS
    version: "7"
    size: basic-s
    num_nodes: 1
    
  # PostgreSQL for persistent data
  - name: trading-db
    engine: PG
    version: "15"
    size: basic-s
    num_nodes: 1

services:
  # Backend API Service
  - name: api
    environment_slug: python
    github:
      branch: main
      deploy_on_push: true
      repo: shyamanurag/trading-system-new
    http_port: 8080
    instance_count: 1
    instance_size_slug: apps-s-1vcpu-1gb
    source_dir: /
    run_command: gunicorn main:app --workers 1 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:$PORT --timeout 120
    health_check:
      http_path: /health/ready
      initial_delay_seconds: 30
      period_seconds: 10
      timeout_seconds: 5
      failure_threshold: 3
      success_threshold: 1
    envs:
    - key: PYTHON_VERSION
      value: "3.10"
    - key: PORT
      value: "8080"
    - key: ENVIRONMENT
      value: production
    # Redis configuration
    - key: REDIS_URL
      value: ${redis-cache.DATABASE_URL}
    - key: REDIS_HOST
      value: ${redis-cache.HOSTNAME}
    - key: REDIS_PORT
      value: ${redis-cache.PORT}
    - key: REDIS_PASSWORD
      value: ${redis-cache.PASSWORD}
    - key: REDIS_SSL
      value: "true"
    # PostgreSQL configuration
    - key: DATABASE_URL
      value: ${trading-db.DATABASE_URL}
    - key: DATABASE_HOST
      value: ${trading-db.HOSTNAME}
    - key: DATABASE_PORT
      value: ${trading-db.PORT}
    - key: DATABASE_NAME
      value: ${trading-db.DATABASE}
    - key: DATABASE_USER
      value: ${trading-db.USERNAME}
    - key: DATABASE_PASSWORD
      value: ${trading-db.PASSWORD}

static_sites:
  # Frontend Static Site
  - name: frontend
    github:
      repo: shyamanurag/trading-system-new
      branch: main
    source_dir: /src/frontend
    build_command: rm -rf node_modules package-lock.json && npm install && npx vite build
    output_dir: dist/frontend
    index_document: index.html
    catchall_document: index.html
    environment_slug: node-js
    envs:
    - key: NODE_VERSION
      value: "18"
    - key: VITE_API_URL
      value: https://algoauto-ua2iq.ondigitalocean.app

# Routing Configuration - Order matters!
ingress:
  rules:
  # API routes first (more specific)
  - component:
      name: api
    match:
      path:
        prefix: /api
    preserve_path_prefix: true
  - component:
      name: api
    match:
      path:
        prefix: /docs
  - component:
      name: api
    match:
      path:
        prefix: /health
  - component:
      name: api
    match:
      path:
        prefix: /webhook
  - component:
      name: api
    match:
      path:
        prefix: /control
  - component:
      name: api
    match:
      path:
        prefix: /ws
  # Frontend catch-all route last
  - component:
      name: frontend
    match:
      path:
        prefix: / 