name: trading-system-fullstack

# Database Services
databases:
  # Redis for caching and real-time data
  - name: redis-cache
    engine: REDIS
    version: "7"
    size: basic-s
    num_nodes: 1
    
  # PostgreSQL for persistent data
  - name: trading-db
    engine: PG
    version: "15"
    size: basic-s
    num_nodes: 1

services:
  # Backend API Service (Docker)
  - name: api
    environment_slug: python
    github:
      repo: shyamanurag/trading-system-new
      branch: main
    http_port: 8000
    envs:
    - key: PORT
      value: "8000"
    - key: ENVIRONMENT
      value: production
    - key: REDIS_URL
      value: ${redis-cache.PRIVATE_URL}
    - key: DATABASE_URL
      value: ${trading-db.DATABASE_URL}
    - key: REDIS_HOST
      value: ${redis-cache.HOSTNAME}
    - key: REDIS_PORT
      value: ${redis-cache.PORT}
    - key: REDIS_PASSWORD
      value: ${redis-cache.PASSWORD}
    - key: DB_HOST
      value: ${trading-db.HOSTNAME}
    - key: DB_PORT
      value: ${trading-db.PORT}
    - key: DB_NAME
      value: ${trading-db.DATABASE}
    - key: DB_USER
      value: ${trading-db.USERNAME}
    - key: DB_PASSWORD
      value: ${trading-db.PASSWORD}

static_sites:
  # Frontend Static Site
  - name: frontend
    github:
      repo: shyamanurag/trading-system-new
      branch: main
    source_dir: /
    build_command: npm run build:digitalocean
    output_dir: dist/frontend
    index_document: index.html
    error_document: index.html
    environment_slug: node-js
    envs:
    - key: NODE_VERSION
      value: "18"
    - key: VITE_API_URL
      value: ${api.PUBLIC_URL}

# Routing Configuration
ingress:
  rules:
  - component:
      name: frontend
    match:
      path:
        prefix: /
  - component:
      name: api
    match:
      path:
        prefix: /api 